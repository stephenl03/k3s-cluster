---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: sonarr
      version: 16.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    controllerType: deployment
    image:
      repository: ghcr.io/k8s-at-home/sonarr
      tag: v3.0.8.1507
    env:
      TZ: "America/Chicago"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-classic"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: "tv.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "tv.${SECRET_DOMAIN}"
            secretName: "sonarr-tls"
      # yamllint disable rule:line-length
      # main:
      #  enabled: true
      #  ingressClassName: "traefik"
      #  annotations:
      #    kubernetes.io/tls-acme: "true"
      #    cert-manager.io/cluster-issuer: letsencrypt-production
      #    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      #    traefik.ingress.kubernetes.io/router.middlewares: "network-internal-auth@kubernetescrd"
      #    external-dns/is-public: "true"
      #    external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
      #  hosts:
      #    - host: "tv.${SECRET_DOMAIN}"
      #      paths:
      #        - path: /
      #          pathType: Prefix
      #  tls:
      #    - hosts:
      #        - "tv.${SECRET_DOMAIN}"
      #      secretName: tls.sonarr
      # yamllint enable rule:line-length
      api:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        hosts:
          - host: "tv.${SECRET_DOMAIN}"
            paths:
              - path: /api
                pathType: Prefix
        tls:
          - hosts:
              - "tv.${SECRET_DOMAIN}"
            secretName: tls.sonarr
    # controllerLabels:
    #  kasten-backup: "true"
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-pvc
      nfs-nas-media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "nas.${SECRET_DOMAIN}"
            path: /mnt/storage-x/TVShows
        mountPath: /tv
        readOnly: false
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
    resources:
      requests:
        memory: 350Mi
        cpu: 25m
      limits:
        memory: 5000Mi
